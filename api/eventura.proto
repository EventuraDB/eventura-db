syntax = "proto3";

package eventura;

option go_package = "./pb";

message Metadata {
  repeated string tags = 2;
  map<string, string> custom = 3;
}

message Event {
  uint64 id = 1;
  string stream = 2;
  string type = 3;
  bytes payload = 4;
  int64 timestamp = 5;
  Metadata metadata = 6;
}

message AppendEventRequest {
  string stream = 1;
  string eventType = 2;
  bytes payload = 3;
  Metadata metadata = 4;
}

message AppendEventResponse {
  uint64 eventId = 1;
}

message ReadByStreamRequest {
  string stream = 1;
  uint64 fromId = 2;
}

message ReadByEventTypeRequest {
  string eventType = 1;
  uint64 fromId = 2;
}

message ReadByTagsRequest {
  string tag = 1;
  uint64 fromId = 2;
}

message ReadAllRequest {
  uint64 fromId = 1;
}

message ReadStreamResponse {
  repeated Event events = 1;
  uint64 streamPosition = 2;
}

message SubscribeRequest {
  string consumerGroup = 1;
}

message SubscribeResponse {
  Event event = 1;
}

message GetEventRequest {
  uint64 eventId = 1;
}

message GetEventResponse {
  Event event = 1;
}

service EventService {
  rpc AppendEvent(AppendEventRequest) returns (AppendEventResponse);
  rpc ReadEvent(GetEventRequest) returns (GetEventResponse);
  rpc ReadByStream(ReadByStreamRequest) returns (ReadStreamResponse);
  rpc ReadByEventType(ReadByEventTypeRequest) returns (ReadStreamResponse);
  rpc ReadByTags(ReadByTagsRequest) returns (ReadStreamResponse);
  rpc ReadAll(ReadAllRequest) returns (stream ReadStreamResponse);
  rpc Subscribe(SubscribeRequest) returns (stream SubscribeResponse);
}